{"ast":null,"code":"import seeds from '../assets/sorting_hat.json';\nimport QuestionComponent from '../components/QuestionComponent.vue';\nexport default {\n  name: 'SelectionChat',\n  components: {\n    QuestionComponent\n  },\n  data() {\n    return {\n      questions: seeds,\n      questionIndex: 0,\n      asnwer: '',\n      houses: {\n        g: 0,\n        h: 0,\n        r: 0,\n        s: 0\n      }\n    };\n  },\n  methods: {\n    onEnter() {\n      const actualQuestion = this.questions[this.questionIndex];\n      const scores = actualQuestion.filter(answer => {\n        if (answer.title.toLowerCase() === this.answer.toLowerCase()) {\n          return answer.scores;\n        }\n      });\n      console.log(this.asnwer);\n      console.log(actualQuestion.answers);\n      console.log(scores);\n    }\n  }\n};","map":{"version":3,"names":["seeds","QuestionComponent","name","components","data","questions","questionIndex","asnwer","houses","g","h","r","s","methods","onEnter","actualQuestion","scores","filter","answer","title","toLowerCase","console","log","answers"],"sources":["src/views/SelectionChat.vue"],"sourcesContent":["<template>\n  <el-col class=\"selection-chat-container\">\n    <el-row class=\"chat-container\">\n      <QuestionComponent :question=\"questions[questionIndex]\"/>\n    </el-row>\n    <el-row class=\"answer-input-container\">\n      <el-input\n        class=\"answer-input\"\n        placeholder=\"\"\n        suffix-icon=\"el-icon-position\"\n        v-model=\"asnwer\"\n        @change=\"onEnter\">\n      </el-input>\n    </el-row>\n  </el-col>\n</template>\n\n<script>\nimport seeds from '../assets/sorting_hat.json'\nimport QuestionComponent from '../components/QuestionComponent.vue'\n\nexport default {\n  name: 'SelectionChat',\n  components: {\n    QuestionComponent,\n  },\n  data () {\n    return {\n      questions: seeds,\n      questionIndex: 0,\n      asnwer: '',\n      houses: {\n        g: 0,\n        h: 0,\n        r: 0,\n        s: 0\n      }\n    }\n  },\n  methods: {\n    onEnter() {\n      const actualQuestion = this.questions[this.questionIndex]\n      const scores = actualQuestion.filter(answer => {\n        if (answer.title.toLowerCase() === this.answer.toLowerCase()) {\n          return answer.scores\n        }\n      })\n      console.log(this.asnwer)\n      console.log(actualQuestion.answers)\n      console.log(scores)\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.answer-input-container {\n  display: flex;\n  justify-content: flex-start;\n}\n\n.answer-input {\n  width: 40%;\n  margin: 5px\n}\n</style>"],"mappings":"AAkBA,OAAAA,KAAA;AACA,OAAAC,iBAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAF;EACA;EACAG,KAAA;IACA;MACAC,SAAA,EAAAL,KAAA;MACAM,aAAA;MACAC,MAAA;MACAC,MAAA;QACAC,CAAA;QACAC,CAAA;QACAC,CAAA;QACAC,CAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,QAAA;MACA,MAAAC,cAAA,QAAAV,SAAA,MAAAC,aAAA;MACA,MAAAU,MAAA,GAAAD,cAAA,CAAAE,MAAA,CAAAC,MAAA;QACA,IAAAA,MAAA,CAAAC,KAAA,CAAAC,WAAA,YAAAF,MAAA,CAAAE,WAAA;UACA,OAAAF,MAAA,CAAAF,MAAA;QACA;MACA;MACAK,OAAA,CAAAC,GAAA,MAAAf,MAAA;MACAc,OAAA,CAAAC,GAAA,CAAAP,cAAA,CAAAQ,OAAA;MACAF,OAAA,CAAAC,GAAA,CAAAN,MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}