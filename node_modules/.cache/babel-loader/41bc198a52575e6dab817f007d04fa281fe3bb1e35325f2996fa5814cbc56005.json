{"ast":null,"code":"import seeds from '../assets/sorting_hat.json';\nimport QuestionComponent from '../components/QuestionComponent.vue';\nexport default {\n  name: 'SelectionChat',\n  components: {\n    QuestionComponent\n  },\n  data() {\n    return {\n      questions: seeds,\n      questionIndex: 0,\n      asnwer: '',\n      scores: undefined,\n      houses: {\n        g: 0,\n        h: 0,\n        r: 0,\n        s: 0\n      }\n    };\n  },\n  methods: {\n    onEnter() {\n      const actualQuestion = this.questions[this.questionIndex];\n      actualQuestion.answers.forEach(answer => {\n        let testAnswer = answer.title.toLowerCase();\n        let userAnswer = this.asnwer.toLowerCase();\n        if (testAnswer === userAnswer) {\n          this.scores = answer.scores;\n        }\n      });\n      this.houses.g += this.scores.g;\n      this.houses.h += this.scores.h;\n      this.houses.r += this.scores.r;\n      this.houses.s += this.scores.s;\n      this.questionIndex++;\n      const NewComponent = Vue.extends(QuestionComponent);\n      const QuestionComponentToMount = new NewComponent({\n        propsData: {\n          question: this.questions[this.questionIndex]\n        }\n      });\n      QuestionComponentToMount.$mount('chat-container');\n    }\n  }\n};","map":{"version":3,"names":["seeds","QuestionComponent","name","components","data","questions","questionIndex","asnwer","scores","undefined","houses","g","h","r","s","methods","onEnter","actualQuestion","answers","forEach","answer","testAnswer","title","toLowerCase","userAnswer","NewComponent","Vue","extends","QuestionComponentToMount","propsData","question","$mount"],"sources":["src/views/SelectionChat.vue"],"sourcesContent":["<template>\n  <el-col class=\"selection-chat-container\">\n    <el-row class=\"chat-container\" ref=\"chat-container\">\n      <QuestionComponent :question=\"questions[0]\"/>\n    </el-row>\n    <el-row class=\"answer-input-container\">\n      <el-input\n        class=\"answer-input\"\n        placeholder=\"\"\n        suffix-icon=\"el-icon-position\"\n        v-model=\"asnwer\"\n        @change=\"onEnter\">\n      </el-input>\n    </el-row>\n  </el-col>\n</template>\n\n<script>\nimport seeds from '../assets/sorting_hat.json'\nimport QuestionComponent from '../components/QuestionComponent.vue'\n\nexport default {\n  name: 'SelectionChat',\n  components: {\n    QuestionComponent,\n  },\n  data () {\n    return {\n      questions: seeds,\n      questionIndex: 0,\n      asnwer: '',\n      scores: undefined,\n      houses: {\n        g: 0,\n        h: 0,\n        r: 0,\n        s: 0\n      }\n    }\n  },\n  methods: {\n    onEnter() {\n      const actualQuestion = this.questions[this.questionIndex]\n      actualQuestion.answers.forEach(answer => {\n        let testAnswer = answer.title.toLowerCase()\n        let userAnswer = this.asnwer.toLowerCase()\n        if (testAnswer === userAnswer) {\n          this.scores = answer.scores\n        }\n      })\n\n      this.houses.g += this.scores.g\n      this.houses.h += this.scores.h\n      this.houses.r += this.scores.r\n      this.houses.s += this.scores.s\n\n      this.questionIndex++\n\n      const NewComponent = Vue.extends(QuestionComponent)\n      const QuestionComponentToMount = new NewComponent({\n        propsData: {\n          question: this.questions[this.questionIndex]\n        }\n      })\n      QuestionComponentToMount.$mount('chat-container')\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.answer-input-container {\n  display: flex;\n  justify-content: flex-start;\n}\n\n.answer-input {\n  width: 40%;\n  margin: 5px\n}\n</style>"],"mappings":"AAkBA,OAAAA,KAAA;AACA,OAAAC,iBAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAF;EACA;EACAG,KAAA;IACA;MACAC,SAAA,EAAAL,KAAA;MACAM,aAAA;MACAC,MAAA;MACAC,MAAA,EAAAC,SAAA;MACAC,MAAA;QACAC,CAAA;QACAC,CAAA;QACAC,CAAA;QACAC,CAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,QAAA;MACA,MAAAC,cAAA,QAAAZ,SAAA,MAAAC,aAAA;MACAW,cAAA,CAAAC,OAAA,CAAAC,OAAA,CAAAC,MAAA;QACA,IAAAC,UAAA,GAAAD,MAAA,CAAAE,KAAA,CAAAC,WAAA;QACA,IAAAC,UAAA,QAAAjB,MAAA,CAAAgB,WAAA;QACA,IAAAF,UAAA,KAAAG,UAAA;UACA,KAAAhB,MAAA,GAAAY,MAAA,CAAAZ,MAAA;QACA;MACA;MAEA,KAAAE,MAAA,CAAAC,CAAA,SAAAH,MAAA,CAAAG,CAAA;MACA,KAAAD,MAAA,CAAAE,CAAA,SAAAJ,MAAA,CAAAI,CAAA;MACA,KAAAF,MAAA,CAAAG,CAAA,SAAAL,MAAA,CAAAK,CAAA;MACA,KAAAH,MAAA,CAAAI,CAAA,SAAAN,MAAA,CAAAM,CAAA;MAEA,KAAAR,aAAA;MAEA,MAAAmB,YAAA,GAAAC,GAAA,CAAAC,OAAA,CAAA1B,iBAAA;MACA,MAAA2B,wBAAA,OAAAH,YAAA;QACAI,SAAA;UACAC,QAAA,OAAAzB,SAAA,MAAAC,aAAA;QACA;MACA;MACAsB,wBAAA,CAAAG,MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}